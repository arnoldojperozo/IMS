@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase
@using IMS.CoreBusiness
@using IMS.UseCases.Inventories.Interfaces

<table class="table">
    <thead>
    <tr>
        <th>Name</th>
        <th>Quantity</th>
        <th>Price</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
        @foreach (var inv in _inventoryList)
        {
            <tr>
                <td>@inv.InventoryName</td>
                <td>@inv.Quantity</td>
                <td>@inv.Price.ToString("c")</td>
                <td>
                    <button type="button" class="btn btn-light"></button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {

    private List<Inventory> _inventoryList = new List<Inventory>();

    [Parameter]
    public string SearchTerm { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        _inventoryList = (await  ViewInventoriesByNameUseCase.ExecuteAsync(SearchTerm)).ToList();
        
        
    }

}